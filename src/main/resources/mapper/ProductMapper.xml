<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.whalien207.myweb.product.service.ProductMapper">
  
  	<insert id="regist" parameterType="ProductVO">
  		insert into PRODUCT(prod_enddate,
  							prod_category, 
  							prod_writer, 
  							prod_name,
  							prod_price,
  							prod_count, 
  							prod_discount,
  							prod_purchase_yn, 
  							prod_content, 
  							prod_comment)
  		values( #{prod_enddate},
  				#{prod_category},
  				#{prod_writer},
  				#{prod_name},
  				#{prod_price},
  				#{prod_count},
  				#{prod_discount},
  				#{prod_purchase_yn},
  				#{prod_content},
  				#{prod_comment})
  	</insert>
  	
  	<!-- 
  	1. insert전에 product테이블의 키값을 selectKey태그를 이용해서 얻는다.
  	2. result Type은 조회된 결과타입
  	   keyproperty는 sql에 전달되는 vo의 저장할 key값
  	   order는 BEFORE와 AFTER가 있다. - insert이전에 실행 or insert 이후에 실행할지 결정하는 속성
  	
  	 -->
  	<insert id="registFile" parameterType="ProductUploadVO">
  		
  		<selectKey resultType="int" keyProperty="prod_id" order="BEFORE">
  			select max(prod_id) as prod_id from product where prod_writer = #{prod_writer};
  		</selectKey>
  		
  		insert into PRODUCT_UPLOAD(filename,
  								   filepath,
  								   uuid,
  								   prod_id,
  								   prod_writer) 
  				values( #{filename},
  						#{filepath},
  						#{uuid},
  						#{prod_id},
  						#{prod_writer})
  	</insert>
  	
  	<select id="getList" resultType="ProductVO">
  		select product.*, category.category_nav 
  		from
  		(
  			select * from PRODUCT
  			where prod_writer = #{user_id}
  		
  			<if test="cri.startDate != null and cri.startDate != '' ">
  			<![CDATA[and date_format(prod_enddate, '%Y-%m-%d') >= date_format(#{cri.startDate}, '%Y-%m-%d')]]>
  			</if>

  			<if test="cri.endDate != null and cri.endDate != '' ">
  			<![CDATA[and date_format(prod_enddate, '%Y-%m-%d') <= date_format(#{cri.endDate}, '%Y-%m-%d')]]>
  			</if>
  		
			<if test="cri.searchName != null and cri.searchName != '' ">
			and prod_name like concat('%', #{cri.searchName}, '%')
			</if>
			<if test="cri.searchContent != null and cri.searchContent != '' ">
			and prod_content like concat('%', #{cri.searchContent}, '%')
			</if>
		
			order by
			<if test="cri.searchPrice == 'asc' ">
			prod_price asc,
			</if>
			<if test="cri.searchPrice == 'desc' ">
			prod_price desc, 
			</if>
			prod_id desc
		
  			limit #{cri.pageStart}, #{cri.amount}
  		) product 
		left outer join 
		(
			SELECT
       			CONCAT(A1.group_ID, A1.CATEGORY_ID) AS CATEGORY_KEY, ##카테고리 키 (그룹 + 키 형태로 카테고리분류)
 	   			CASE A1.category_parent_LV
 	        		WHEN 0 THEN A1.category_detail_NM
 					WHEN 1 THEN CONCAT(A2.category_detail_NM,' > ', A1.category_detail_NM)
 					WHEN 2 THEN CONCAT(A3.category_detail_NM, ' > ', A2.category_detail_NM,' > ', A1.category_detail_NM)
 	   			END as CATEGORY_NAV
			FROM PRODUCT_CATEGORY A1
			LEFT OUTER JOIN PRODUCT_CATEGORY A2
			ON A1.CATEGORY_PARENT_LV = A2.CATEGORY_LV AND A1.CATEGORY_DETAIL_PARENT_LV = A2.CATEGORY_DETAIL_LV AND A1.GROUP_ID = A2.GROUP_ID
			LEFT OUTER JOIN PRODUCT_CATEGORY A3
			ON A2.CATEGORY_PARENT_LV = A3.CATEGORY_LV AND A2.CATEGORY_DETAIL_PARENT_LV = A3.CATEGORY_DETAIL_LV
			ORDER BY CATEGORY_NAV ASC
		) category 
		on  product.prod_category = category.category_key;



  	</select>
  	
  	<select id="getTotal" resultType="int">
  		select count(*) as total from PRODUCT 
  		where prod_writer = #{user_id}
  		
  		  		<if test="cri.startDate != null and cri.startDate != '' ">
  		<![CDATA[and date_format(prod_enddate, '%Y-%m-%d') >= date_format(#{cri.startDate}, '%Y-%m-%d')]]>
  		</if>

  		<if test="cri.endDate != null and cri.endDate != '' ">
  		<![CDATA[and date_format(prod_enddate, '%Y-%m-%d') <= date_format(#{cri.endDate}, '%Y-%m-%d')]]>
  		</if>
  		
		<if test="cri.searchName != null and cri.searchName != '' ">
		and prod_name like concat('%', #{cri.searchName}, '%')
		</if>
		<if test="cri.searchContent != null and cri.searchContent != '' ">
		and prod_content like concat('%', #{cri.searchContent}, '%')
		</if>
  		
  	</select>

	<!-- 카테고리 대분류 (lv이 1인것) -->
	<select id="getCategory" resultType="CategoryVO">
		select * from PRODUCT_CATEGORY
		where category_lv=1
	</select>
	
	<!-- 카테고리 중뷴류/소분류 group_id, parent_lv, detail_parent_lv와 매칭 되야함 -->
	<select id="getCategoryChild" resultType="CategoryVO">
		select * from PRODUCT_CATEGORY 
		where group_id = #{group_id}
		and category_parent_lv = #{category_lv}
		and category_detail_parent_lv = #{category_detail_lv}
	</select>
	
	<!-- 이미지데이터 조회 -->
	<select id="getProductImg" resultType="ProductUploadVO">
		select * from PRODUCT_UPLOAD where prod_id = #{prod_id}
	</select>

  </mapper>
  